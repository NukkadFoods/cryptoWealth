{"ast":null,"code":"var _jsxFileName = \"/Users/mahendrabahubali/cryptowealth/frontend/src/context/UserContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext();\nexport { UserContext };\nexport const useUser = () => {\n  _s();\n  const context = useContext(UserContext);\n  if (!context) {\n    throw new Error('useUser must be used within a UserProvider');\n  }\n  return context;\n};\n_s(useUser, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const UserProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n\n  // Check for stored user on component mount\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    const isAuthenticated = localStorage.getItem('isAuthenticated');\n    if (storedUser && isAuthenticated === 'true') {\n      setUser(JSON.parse(storedUser));\n    }\n  }, []);\n  const [staticUserData] = useState({\n    name: 'John Doe',\n    email: 'john@example.com',\n    totalInvestment: 7500,\n    totalEarnings: 1350,\n    dailyEarnings: 150,\n    availableBalance: 850\n  });\n  const [investments] = useState([{\n    id: 1,\n    plan: 'Starter Plan',\n    amount: 500,\n    startDate: '2024-01-15',\n    endDate: '2024-07-15',\n    dailyReturn: 10,\n    totalReturn: 150,\n    status: 'Active'\n  }, {\n    id: 2,\n    plan: 'Professional Plan',\n    amount: 2000,\n    startDate: '2024-02-01',\n    endDate: '2024-08-01',\n    dailyReturn: 40,\n    totalReturn: 400,\n    status: 'Active'\n  }, {\n    id: 3,\n    plan: 'Premium Plan',\n    amount: 5000,\n    startDate: '2024-01-01',\n    endDate: '2024-07-01',\n    dailyReturn: 100,\n    totalReturn: 800,\n    status: 'Completed'\n  }]);\n  const [stats] = useState({\n    totalInvested: 2400000,\n    activeInvestors: 12548,\n    totalPaid: 48000,\n    successRate: 98,\n    yearsOfService: 5\n  });\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const login = userData => {\n    setUser(userData);\n    setIsAuthenticated(true);\n    localStorage.setItem('user', JSON.stringify(userData));\n    localStorage.setItem('isAuthenticated', 'true');\n  };\n  const logout = () => {\n    setUser(null);\n    setIsAuthenticated(false);\n    localStorage.removeItem('user');\n    localStorage.removeItem('isAuthenticated');\n    localStorage.removeItem('authToken');\n  };\n  const value = {\n    user,\n    setUser,\n    staticUserData,\n    investments,\n    stats,\n    isAuthenticated,\n    login,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s2(UserProvider, \"PAm13wDp9Ne7dLp9hPVOAVGMpDg=\");\n_c = UserProvider;\nexport default UserContext;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","UserContext","useUser","_s","context","Error","UserProvider","children","_s2","user","setUser","storedUser","localStorage","getItem","isAuthenticated","JSON","parse","staticUserData","name","email","totalInvestment","totalEarnings","dailyEarnings","availableBalance","investments","id","plan","amount","startDate","endDate","dailyReturn","totalReturn","status","stats","totalInvested","activeInvestors","totalPaid","successRate","yearsOfService","setIsAuthenticated","login","userData","setItem","stringify","logout","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mahendrabahubali/cryptowealth/frontend/src/context/UserContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst UserContext = createContext();\n\nexport { UserContext };\n\nexport const useUser = () => {\n  const context = useContext(UserContext);\n  if (!context) {\n    throw new Error('useUser must be used within a UserProvider');\n  }\n  return context;\n};\n\nexport const UserProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  \n  // Check for stored user on component mount\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    const isAuthenticated = localStorage.getItem('isAuthenticated');\n    if (storedUser && isAuthenticated === 'true') {\n      setUser(JSON.parse(storedUser));\n    }\n  }, []);\n\n  const [staticUserData] = useState({\n    name: 'John Doe',\n    email: 'john@example.com',\n    totalInvestment: 7500,\n    totalEarnings: 1350,\n    dailyEarnings: 150,\n    availableBalance: 850\n  });\n\n  const [investments] = useState([\n    {\n      id: 1,\n      plan: 'Starter Plan',\n      amount: 500,\n      startDate: '2024-01-15',\n      endDate: '2024-07-15',\n      dailyReturn: 10,\n      totalReturn: 150,\n      status: 'Active'\n    },\n    {\n      id: 2,\n      plan: 'Professional Plan',\n      amount: 2000,\n      startDate: '2024-02-01',\n      endDate: '2024-08-01',\n      dailyReturn: 40,\n      totalReturn: 400,\n      status: 'Active'\n    },\n    {\n      id: 3,\n      plan: 'Premium Plan',\n      amount: 5000,\n      startDate: '2024-01-01',\n      endDate: '2024-07-01',\n      dailyReturn: 100,\n      totalReturn: 800,\n      status: 'Completed'\n    }\n  ]);\n\n  const [stats] = useState({\n    totalInvested: 2400000,\n    activeInvestors: 12548,\n    totalPaid: 48000,\n    successRate: 98,\n    yearsOfService: 5\n  });\n\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  const login = (userData) => {\n    setUser(userData);\n    setIsAuthenticated(true);\n    localStorage.setItem('user', JSON.stringify(userData));\n    localStorage.setItem('isAuthenticated', 'true');\n  };\n\n  const logout = () => {\n    setUser(null);\n    setIsAuthenticated(false);\n    localStorage.removeItem('user');\n    localStorage.removeItem('isAuthenticated');\n    localStorage.removeItem('authToken');\n  };\n\n  const value = {\n    user,\n    setUser,\n    staticUserData,\n    investments,\n    stats,\n    isAuthenticated,\n    login,\n    logout\n  };\n\n  return (\n    <UserContext.Provider value={value}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n\nexport default UserContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}